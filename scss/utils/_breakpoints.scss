@use 'sass:list';
@use 'sass:map';

/* Name of the next breakpoint, or null for the last breakpoin */
@function breakpoint-next(
	$name,
	$breakpoints: $grid-breakpoints,
	$breakpoint-names: map-keys($breakpoints)
) {
	$n: list.index($breakpoint-names, $name);
	@if not $n {
		@error "breakpoint `#{$name}` not found in `#{$breakpoints}`";
	}
	@return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

/* Minimum breakpoint width */
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
	$min: map.get($breakpoints, $name);
	@return if($min != 0, $min, null);
}

/* Maximum breakpoint width */
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
	$max: map.get($breakpoints, $name);
	@return if($max and $max > 0, $max - 0.02, null);
}

/* Media of at least the minimum breakpoint width */
@mixin breakpoint-up($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);
	@if $min {
		@media (min-width: $min) {
			@content;
		}
	} @else {
		@content;
	}
}

/* Media of at most the maximum breakpoint width */
@mixin breakpoint-down($name, $breakpoints: $grid-breakpoints) {
	$max: breakpoint-max($name, $breakpoints);
	@if $max {
		@media (max-width: $max) {
			@content;
		}
	} @else {
		@content;
	}
}

/* Media that spans multiple breakpoint widths */
@mixin breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($lower, $breakpoints);
	$max: breakpoint-max($upper, $breakpoints);

	@if $min != null and $max != null {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	} @else if $max == null {
		@include media-breakpoint-up($lower, $breakpoints) {
			@content;
		}
	} @else if $min == null {
		@include media-breakpoint-down($upper, $breakpoints) {
			@content;
		}
	}
}

/* Media between the breakpoint's minimum and maximum widths */
@mixin breakpoint-only($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);
	$next: breakpoint-next($name, $breakpoints);
	$max: breakpoint-max($next, $breakpoints);

	@if $min != null and $max != null {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	} @else if $max == null {
		@include media-breakpoint-up($name, $breakpoints) {
			@content;
		}
	} @else if $min == null {
		@include media-breakpoint-down($next, $breakpoints) {
			@content;
		}
	}
}
